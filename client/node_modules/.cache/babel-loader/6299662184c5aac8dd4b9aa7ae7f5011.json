{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (error) {\n          alert(error.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying.\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {//alert(\"This product has been added to cart.\")\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/MyProjects/ReactJS/Ecommerce/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","console","log","error","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAGG,KAAH,EAAU;AACT,YAAMO,OAAO,GAAG,YAAY;AAC3B,YAAI;AACH,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,YAAV,EAAwB;AACzCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AADgC,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,SATD,CASE,OAAOQ,KAAP,EAAc;AACfC,UAAAA,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,GAArB,CAAL;AACA;AACD,OAbD;;AAeAZ,MAAAA,OAAO;AACP;AACD,GAnBQ,EAmBN,CAACP,KAAD,CAnBM,CAAT;;AAqBA,QAAMoB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAClC,QAAG,CAACpB,QAAJ,EAAc,OAAOgB,KAAK,CAAC,kCAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,IAAI,IAAI;AAChC,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACA,KAFa,CAAd;;AAIA,QAAGH,KAAH,EAAU;AACThB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGgB,OAAJ;AAAaK,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AACA,KAFD,MAEK,CACJ;AACA;AACD,GAZD;;AAcA,SAAO;AACNzB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADJ;AAENC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFH;AAGNC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHA;AAINc,IAAAA,OAAO,EAAEA;AAJH,GAAP;AAMA;;GAhDuBrB,O;;KAAAA,O","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default function UserAPI(token) {\r\n\tconst [isLogged, setIsLogged] = useState(false)\r\n\r\n\tconst [isAdmin, setIsAdmin] = useState(false)\r\n\r\n\tconst [cart, setCart] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(token) {\r\n\t\t\tconst getUser = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst res = await axios.get('user/infor', {\r\n\t\t\t\t\t\theaders: {Authorization: token}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tsetIsLogged(true)\r\n\t\t\t\t\tres.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\talert(error.response.data.msg)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgetUser()\r\n\t\t}\r\n\t}, [token])\r\n\r\n\tconst addCart = async (product) => {\r\n\t\tif(!isLogged) return alert(\"Please login to continue buying.\")\r\n\r\n\t\tconst check = cart.every(item => {\r\n\t\t\treturn item._id !== product._id\r\n\t\t})\r\n\r\n\t\tif(check) {\r\n\t\t\tsetCart([...cart, {...product, quantity: 1}])\r\n\t\t}else{\r\n\t\t\t//alert(\"This product has been added to cart.\")\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tisLogged: [isLogged, setIsLogged],\r\n\t\tisAdmin: [isAdmin, setIsAdmin],\r\n\t\tcart: [cart, setCart],\r\n\t\taddCart: addCart\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}